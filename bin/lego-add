#!/bin/bash -eu

source "$(dirname $0)/../lib/lego.sh"

# TODO:
# - manifest of installed files for proper cleanup

help() {
  cat << END
Usage:
    lego add LEGO
END
  exit
}

copy_files() {
  local src="$1"
  local dst="$2"

  mkdir -p "$dst"
  tar -C "$src" -cvf - --exclude .keep . | tar -C "$dst" -xf -
}

env_help() {
  local name="$1"
  local env="$2"

  cat <<END

-----------------------------------------------------------------------------------
${BOLD}${name}${RESET} includes a configuration file at

  - ${GREEN}${env}${RESET}

You can edit it directly, or run '${GREEN}lego config ${name}${RESET}'.

The original configuration is stored in

  - ${BLUE}${env}.orig${RESET}

in case you want to compare.
Running ${BOLD}lego config-diff ${name}${RESET} will run a diff of
the current .env with the original.
-----------------------------------------------------------------------------------


END
}

# true if original env is different from current, e.g.
# when current was edited, or new version of original was installed
env_diff() {
  local env="$1"
  if ! diff -q "$env" "$env.orig"; then

    cat <<END

${YELLOW}Your configuration differs from the original:${RESET}

${BLUE}======================

END
    diff -u "$env.orig" "$env" || true
    cat <<END


======================${RESET}

END
  fi

}

copy_env() {
  local name="$1"
  local dst="$2"

  local template="$dst/templates/.env"
  [ -r "$template" ] || return 0

  local env="$dst/.env"

  # lego has .env. tell user avout it
  env_help "$name" "$env"

  # always copy .orig
  cp -f "$template" "$env.orig"

  # only copy .env if it doesn't aleady exist. do not overwrite potential local
  # configuration
  [ -e "$env" ] || cp -vf "$template" "$env"

  # tell user if env was changed
  env_diff "$env"
}

run_install() {
  local dst="$1"

  [ -x "$dst/install.sh" ] || return 0

  "$dst/install.sh"
}

add() {
  handle_help "$@"
  require_args lego-add 1 "$@"

  local name="$1"
  local src="$(src_lego $name)"
  local dst="$(dst_lego $name)"

  copy_files "$src" "$dst"

  copy_env "$name" "$dst"

  run_install "$dst"

  lego-update
}

add "$@"
